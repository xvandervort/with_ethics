1/28
    Finishing touches before the preso. Also started an official backlog on market (port 3001). Uh oh! Why won't the gem run from any other project but itself? (FIXED)
    NEXT: test files check working quite badly on a rails project. Do that refactoring!

1/27
    Worked today on finding test folder and files. Works (recursively, even)
    Needs to be more discriminating about naming of the files it returns.
    Needs to be wired up to work form the command line.
    WAIT! renamed tcheck to tfind. Took out all the reporting stuff. Then created something called tcheck. THAT will get the output from tfind and do all the checks and reporting.
    THEN wire it up.
    
1/26
    tag search. It has run into a problem with wildcards in file names. ... Okay. FileInfo has been extended to iterate through a list with filenames.
    NOW: Reporting results of tag search. It will report the files it's found in. (done)
    NOTE: controller tests are printing stuff out through reporter. SUPPRESS! (done)
    AS soon as the current stuff is working, start finding UNIT TESTS (working on it)
    Ok. I started to configure this to work with file info objects but that doesn't work because it hasn't found out the names yet! What it actually needs is a place to start (starting at root) and a couple things to look for. I'll just go with defaults. So really, it doesn't need anything.

1/25
  Finishing up first pass at reporter (console output only).
  Insert reporter into checking and then actually run a check from the command line! (DONE)
  Now: Check for tests tagged ## SECURITY (which may or may not actually run)
        Maybe also check the code for TODO and BUG markers.
        These are all documentation tests.
    What it should do here is NOT report whether a particular file has the tag or not but, instead, a count (and optional list) of files with the tag OR failure to find any. NOTE: at file read time looks like the wrong place to fix a path, because there are too many levels and permutations of data in the config. Instead, I'm going to just make some utilities.
    Having trouble with the mocking. I'm goingt o have to start making real test files. Boo!
    NEXT: CONTINUE searching for tags in files, using wildcards for file names so you can do a whole folder (and list of tags) at once.
    LATER: Develop a tool to create the config file AND another to help set ethical standards.
    MUCH LATER: look for misspelled tags (fuzzy match)

1/22
    Wiring up to do simple file checks. (mostly done but not from command line yet)
    Adding a reporter so I can do some logging. At first, just to the console
    NEXT: Finish wiring things up so you can check for promised files and get back output.

1/21
    System needs a controller and a subcontroller that knows what has been promised and can configure tests to be run. That should be fun.
    I now have a "controller" that takes in the results of a yaml file, does some incredibly simple-minded sanity checking, and nothign else.
    NEXT: It should run some tests! (created controller, accepts promises object. Now RUN THEM ALL)

1/19
    Check for keeping of promises and following basic practices.